name: Build and Publish Docker Images

on:
  push:
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Install cosign for image signing
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.3.0

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # =====================================================
      # 📋 METADATA EXTRACTION
      # =====================================================
      - name: 🏷️ Extract metadata for Server image
        id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-server,onlatest=true

      - name: 🏷️ Extract metadata for Client image
        id: meta-client
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-client,onlatest=true

      # =====================================================
      # 🏗️ BUILD AND PUSH IMAGES (Server → Client)
      # =====================================================
      - name: 🏗️ Build and push Server Docker image
        id: build-and-push-server
        uses: docker/build-push-action@v5
        with:
          context: .
          target: server
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build and push Client Docker image
        id: build-and-push-client
        uses: docker/build-push-action@v5
        with:
          context: .
          target: client
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # =====================================================
      # ✍️ SIGN IMAGES WITH COSIGN
      # =====================================================
      - name: ✍️ Sign Server image with Cosign
        if: github.event_name != 'pull_request'
        run: |
          echo "🔏 Signing Server image tags..."
          echo "${{ steps.meta-server.outputs.tags }}" | sed 's/,/\n/g' | while read tag; do
            echo "  📝 Signing: ${tag}@${{ steps.build-and-push-server.outputs.digest }}"
            cosign sign --yes "${tag}@${{ steps.build-and-push-server.outputs.digest }}"
          done
          echo "✅ Server image signing completed"
        env:
          COSIGN_EXPERIMENTAL: "true"

      - name: ✍️ Sign Client image with Cosign
        if: github.event_name != 'pull_request'
        run: |
          echo "🔏 Signing Client image tags..."
          echo "${{ steps.meta-client.outputs.tags }}" | sed 's/,/\n/g' | while read tag; do
            echo "  📝 Signing: ${tag}@${{ steps.build-and-push-client.outputs.digest }}"
            cosign sign --yes "${tag}@${{ steps.build-and-push-client.outputs.digest }}"
          done
          echo "✅ Client image signing completed"
        env:
          COSIGN_EXPERIMENTAL: "true"

      # =====================================================
      # 📊 BUILD SUMMARY
      # =====================================================
      - name: 📊 Display build summary
        if: github.event_name != 'pull_request'
        run: |
          echo "🎉 Build and Publish Summary"
          echo "================================"
          echo "📦 Server Image Tags:"
          echo "${{ steps.meta-server.outputs.tags }}" | sed 's/,/\n/g' | sed 's/^/  - /'
          echo ""
          echo "📦 Client Image Tags:"  
          echo "${{ steps.meta-client.outputs.tags }}" | sed 's/,/\n/g' | sed 's/^/  - /'
          echo ""
          echo "✅ All images built, pushed, and signed successfully!"
